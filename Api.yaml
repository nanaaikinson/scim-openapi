openapi: 3.0.0
x-stoplight:
  id: 3lghmwqbc6uha
info:
  title: Scim Openapi
  version: '1.0'
  description: Churchpro API specifications
  contact:
    name: Nana Kwesi Ofosu-Aikins
    email: nanaaikinson24@gmail.com
servers:
  - url: 'https://chms-scim.test/api'
    description: Local
  - description: Testing
    url: 'https://scim.aikintech.com/api'
tags:
  - name: admin
  - name: central
  - name: mobile
paths:
  /c/auth/social/sign-in:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-social-sign-in
      description: 'Central: auth social sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialRequest'
        description: ''
  /c/auth/social/sign-up:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-social-sign-up
      description: 'Central: auth social sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialRequest'
  /c/auth/local/sign-in:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-local-sign-in
      description: 'Central: auth local sign in'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalSignInRequest'
  /c/auth/local/sign-up:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-local-sign-up
      description: 'Central: auth local sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalSignUpRequest'
  /c/auth/update-device:
    post:
      summary: ''
      tags:
        - central
      operationId: auth-update-device
      description: 'Central: auth update device'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
    parameters: []
  /c/auth/update-password:
    patch:
      summary: ''
      tags:
        - central
      operationId: auth-update-password
      description: 'Central: auth update password'
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
    parameters: []
  /c/auth/update-profile:
    patch:
      summary: ''
      tags:
        - central
      operationId: auth-update-profile
      description: 'Central: auth update user profile'
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        description: ''
    parameters: []
  /c/auth/refresh-token:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
      operationId: auth-refresh-token
      description: 'Central: auth refresh token'
      security:
        - JWT: []
  /c/auth/user:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
      operationId: auth-user
      description: 'Central: auth user'
      security:
        - JWT: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: withRelations
    parameters: []
  /c/auth/verify-account:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAccountResponse'
      operationId: auth-verify-account
      security:
        - JWT: []
      description: 'Central: Auth verify account'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAccountRequest'
  /c/auth/resend-verification:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-resend-email-verification
      security:
        - JWT: []
      description: 'Central: Auth resend email verification'
    parameters: []
  /c/auth/logout:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-logout
      description: 'Cental: Auth logout'
      security:
        - JWT: []
  /c/auth/forgot-password:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-forgot-password
      description: 'Central: Auth forgot password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
  /c/files/upload:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
      operationId: files-upload
      description: 'Central: Files upload'
      security:
        - JWT: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
  /a/prayers:
    get:
      summary: ''
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrayersResponse'
      operationId: get-prayers
      description: 'Admin: Get prayers'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: page
          description: Current page
        - schema:
            type: string
          in: query
          name: limit
          description: Number of items
        - schema:
            type: string
          in: query
          name: search
          description: Search query
    parameters: []
  '/a/prayers/{id}':
    get:
      summary: ''
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prayer'
                  message:
                    type: string
                    nullable: true
                required:
                  - data
                  - message
      operationId: get-prayer
      description: 'Admin: Get prayer'
      security:
        - JWT: []
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /a/events:
    get:
      summary: ''
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
      operationId: get-events
      description: 'Admin: Get events'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: page
          description: Current page
        - schema:
            type: string
          in: query
          name: limit
          description: Number of items
        - schema:
            type: string
          in: query
          name: search
          description: Search query
    parameters: []
    post:
      summary: ''
      operationId: create-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      description: 'Admin: Create event'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreEventRequest'
      tags:
        - admin
  '/a/events/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      operationId: get-event
      description: 'Admin: Get event'
      security:
        - JWT: []
      parameters: []
    patch:
      tags:
        - admin
      summary: ''
      operationId: update-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      description: 'Admin: Update event'
      security:
        - JWT: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreEventRequest'
    delete:
      tags:
        - admin
      summary: ''
      operationId: delete-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Admin: Delete event'
      security:
        - JWT: []
      parameters: []
  /m/prayers:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobilePrayers'
      operationId: client-prayer-requests
      security:
        - JWT: []
      description: 'Mobile: Get prayer-requests'
    post:
      summary: ''
      operationId: client-request-prayer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Client: request for a prayer'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrayerRequest'
      tags:
        - mobile
  /m/podcasts:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
      operationId: mobile-get-podcasts
      description: 'Mobile: Get podcasts'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
  /c/podcasts:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
      operationId: client-get-podcasts
      description: 'Client: Get podcasts'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
    parameters: []
components:
  schemas:
    MessageResponse:
      title: MessageResponse
      x-stoplight:
        id: bnx29eprw94jt
      type: object
      properties:
        message:
          type: string
      required:
        - message
    AuthUserResponse:
      type: object
      x-examples:
        Example 1:
          data:
            user:
              firstName: Nana
              lastName: Aikinson
              email: nanaaikinson2020@gmail.com
              avatar: null
              onboardingStep: account verification
            token:
              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2Noc3luYy50ZXN0L2FwaS9jL2F1dGgvbG9jYWwvc2lnbi11cCIsImlhdCI6MTY5MzM1NjMyOCwiZXhwIjoxNjkzMzYzNTI4LCJuYmYiOjE2OTMzNTYzMjgsImp0aSI6Imh6ZGhvbU5XeTNQQWI3VzIiLCJzdWIiOiIwMUg5MVlFMVE5R1FEMEgxNEdYUFo5UFJTRiIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJjaGFubmVsIjoidGVuYW50In0.fMGScLG9qDsYbSUManZnhmHQ5tLhsd_NiXkstRb5DUs
              expiresAt: '2023-08-31T00:45:28.689725Z'
              refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2Noc3luYy50ZXN0L2FwaS9jL2F1dGgvbG9jYWwvc2lnbi11cCIsImlhdCI6MTY5MzM1NjMyOCwiZXhwIjoxNjkzNDQyNzI4LCJuYmYiOjE2OTMzNTYzMjgsImp0aSI6IlczTmdOVE9rMUlra0NISDIiLCJzdWIiOiIwMUg5MVlFMVE5R1FEMEgxNEdYUFo5UFJTRiIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJjaGFubmVsIjoidGVuYW50In0.H5do1rZpoWDd5AX--4BjA3cH366XEWVY3V2Sr0Z3lek
          message: |-
            Thank you for signing up! We're thrilled to have you join Church Sync.
                    Your account creation is almost complete. Please check your email for a verification code.
                    Once you've received it, simply enter the code in the verification code input to finalize your account setup.
                    We can't wait to see you make the most of our platform!
      x-stoplight:
        id: 3cf8a7923c54b
      properties:
        data:
          type: object
          required:
            - user
            - tokens
          properties:
            user:
              $ref: '#/components/schemas/User'
            tokens:
              type: object
              required:
                - access
                - expiresAt
              properties:
                access:
                  type: string
                expiresAt:
                  type: string
                refresh:
                  type: string
        message:
          type: string
      required:
        - data
        - message
    SocialRequest:
      title: SocialRequest
      x-stoplight:
        id: a1e8ace90050a
      type: object
      properties:
        accessToken:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
        provider:
          type: string
          enum:
            - google
            - apple
      required:
        - accessToken
        - channel
        - provider
    LocalSignInRequest:
      title: LocalSignInRequest
      x-stoplight:
        id: d1hms4p7i66i6
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - email
        - password
        - channel
    LocalSignUpRequest:
      title: LocalSignUpRequest
      x-stoplight:
        id: vfbvvpl8arhl9
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
        terms:
          type: boolean
      required:
        - firstName
        - lastName
        - email
        - password
        - channel
        - terms
    VerifyAccountRequest:
      title: VerifyAccountRequest
      x-stoplight:
        id: cqjn3a193c7cg
      type: object
      properties:
        verificationCode:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
      required:
        - verificationCode
        - channel
    Prayer:
      type: object
      x-examples:
        Example 1:
          id: 01H81MXPT49ZF0HXWKFWWHTAPE
          title: Test title
          description: Test description
          createdAt: '2023-08-17T11:43:34.000000Z'
          status: null
          name: John Doe
          email: john.doe@example.com
          phoneNumber: null
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        createdAt:
          type: string
        status:
          type: string
          nullable: true
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - createdAt
        - status
        - name
        - email
        - phoneNumber
    PrayersResponse:
      type: object
      description: Prayers response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Prayer'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    Event:
      type: object
      x-examples:
        Example 1:
          id: 01H81T2GZ7P3H640YG2CKH4VXS
          title: test
          description: test description
          startDate: '2020-10-10'
          endDate: '2020-10-10'
          location: null
          published: true
          createdAt: '2023-08-17T13:13:34.000000Z'
          image: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/central/events/01H81JEN6B744WS8HY6DS89N6V/1692278014_01H81T2GZAAFT3N0N8GAKGG9Z6.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230817%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230817T131339Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=cd9adcdf2587096e6a81e5e4b77679351d1fce630119f5067a1bcbecf00d3000'
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        location:
          type: string
          nullable: true
        published:
          type: boolean
        createdAt:
          type: string
        image:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - startDate
        - endDate
        - location
        - published
        - createdAt
        - image
    EventsResponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01H81T2GZ7P3H640YG2CKH4VXS
              title: test
              description: test description
              startDate: '2020-10-10'
              endDate: '2020-10-10'
              location: null
              published: true
              createdAt: '2023-08-17T13:13:34.000000Z'
              image: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/central/events/01H81JEN6B744WS8HY6DS89N6V/1692278014_01H81T2GZAAFT3N0N8GAKGG9Z6.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230817%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230817T131339Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=cd9adcdf2587096e6a81e5e4b77679351d1fce630119f5067a1bcbecf00d3000'
          meta:
            show: Showing 1 to 1 of 1 items
            total: 1
            count: 1
            perPage: 10
            currentPage: 1
            totalPages: 1
            links:
              first: 'http://saas.test/api/t/events?page=1'
              last: 'http://saas.test/api/t/events?page=1'
              prev: null
              next: null
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    StoreEventRequest:
      title: StoreEventRequest
      x-stoplight:
        id: 6061s1v2isa6d
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        published:
          type: boolean
          default: false
        image:
          type: string
          nullable: true
      required:
        - title
        - description
        - startDate
        - endDate
        - published
    EventResponse:
      type: object
      x-examples:
        Example 1:
          message: Event created successfully.
          data: {}
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/Event'
      required:
        - message
        - data
    RefreshTokenResponse:
      type: object
      x-examples:
        Example 1:
          data:
            accessToken: ''
            expiresAt: ''
            tokenType: ''
          message: ''
      properties:
        data:
          type: object
          required:
            - access
            - expiresAt
          properties:
            access:
              type: string
            expiresAt:
              type: string
        message:
          type: string
          nullable: true
      required:
        - data
        - message
    PrayerRequest:
      type: object
      x-examples:
        Example 1:
          title: Test prayer request
          description: This is a test description
      properties:
        title:
          type: string
        description:
          type: string
      required:
        - title
        - description
    MobilePrayers:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01H99257805PBQX617341EBZ62
              title: Test prayer request
              description: This is a test description
              createdAt: '2023-09-01T19:05:14.000000Z'
          meta:
            show: Showing 1 to 1 of 1 items
            total: 1
            count: 1
            perPage: 10
            currentPage: 1
            totalPages: 1
            links:
              first: 'https://chsync.test/api/m/prayers?page=1'
              last: 'https://chsync.test/api/m/prayers?page=1'
              prev: null
              next: null
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              createdAt:
                type: string
            required:
              - id
              - title
              - description
              - createdAt
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - meta
    FileUploadRequest:
      title: FileUploadRequest
      x-stoplight:
        id: ivjnukgur6ujw
      type: object
      properties:
        file:
          type: string
          format: binary
        contentType:
          type: string
          enum:
            - logo
            - excerpt
            - avatar
      required:
        - file
        - contentType
    FileUploadResponse:
      type: object
      x-examples:
        Example 1:
          data:
            id: 01H9AV5QTTFMYEVD7D5HVD4642
            url: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/logos/1693654896_01H9AV5KRN6HQA22D3PE95K9QX.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230902%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230902T114140Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=a0b2dd0d1d56732d2b450033a0bd4cd1f7cf9d2e001c0a29669764e28a33a19d'
          message: ''
      properties:
        data:
          type: object
          required:
            - id
            - url
          properties:
            id:
              type: string
            url:
              type: string
        message:
          type: string
      required:
        - data
        - message
    UpdateOrganizationRequest:
      type: object
      x-examples:
        Example 1:
          email: nanaaikinson24@gmail.com
          name: Light house
          phoneNumber: '0241726707'
          location: Manfe
          socials:
            facebook: '@lighthouse'
      properties:
        email:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        logo:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        socials:
          type: object
          properties:
            facebook:
              type: string
              nullable: true
            x:
              type: string
              nullable: true
            youtube:
              type: string
              nullable: true
            instagram:
              type: string
              nullable: true
            tiktok:
              type: string
              nullable: true
            threads:
              type: string
              nullable: true
            website:
              type: string
              nullable: true
      required:
        - email
        - name
        - phoneNumber
        - location
        - logo
        - about
        - socials
      title: ''
    AuthUser:
      title: AuthUser
      x-stoplight:
        id: z5wzzk0c19cim
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
      required:
        - data
    User:
      title: User
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        avatar:
          type: string
          nullable: true
        emailVerified:
          type: boolean
      required:
        - id
        - firstName
        - lastName
        - email
        - avatar
        - emailVerified
    VerifyAccountResponse:
      title: VerifyAccountResponse
      x-stoplight:
        id: htol1s9a5iyfw
      type: object
      properties:
        message:
          type: string
      required:
        - message
    UpdatePasswordRequest:
      title: UpdatePasswordRequest
      x-stoplight:
        id: oxx29um0obez7
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
      required:
        - currentPassword
        - newPassword
        - confirmNewPassword
    UpdateProfileRequest:
      type: object
      x-stoplight:
        id: 85bb2c570d6bc
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        avatar:
          type: string
      required:
        - firstName
        - lastName
    UpdateDeviceRequest:
      title: UpdateDeviceRequest
      x-stoplight:
        id: pioxfxk04mpio
      type: object
      properties:
        deviceId:
          type: string
        fcmToken:
          type: string
        type:
          type: string
          enum:
            - android
            - ios
      required:
        - deviceId
        - fcmToken
        - type
    ForgotPasswordRequest:
      title: ForgotPasswordRequest
      x-stoplight:
        id: uenqt0nyerqsu
      type: object
      properties:
        email:
          type: string
      required:
        - email
    Podcast:
      type: object
      x-examples:
        Example 1:
          id: 01HDVMT7TDHHRNDZEAH3TC8P4S
          title: SEVEN WAYS TO SOW SEEDS OF RIGHTEOUSNESS
          description: Message by Evang. Elijah-Ben Kusi Agyapong during morning devotion (B4DBP)
          link: 'https://awscdn.podcasts.com/audio-OYy9tjR4zWOa17YqZu2hFuEbv.mp3'
          publishedDate: '2023-10-26 06:58:49'
          author: Evangelist Elijah Ben
          image: null
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        link:
          type: string
        publishedDate:
          type: string
        author:
          type: string
        image:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - link
        - publishedDate
        - author
        - image
    PodcastsResponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01HDVMT7TDHHRNDZEAH3TC8P4S
              title: SEVEN WAYS TO SOW SEEDS OF RIGHTEOUSNESS
              description: Message by Evang. Elijah-Ben Kusi Agyapong during morning devotion (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-OYy9tjR4zWOa17YqZu2hFuEbv.mp3'
              publishedDate: '2023-10-26 06:58:49'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VTX03K1G9QPSQKSVAJ
              title: SEVEN WAYS TO SEEK THE LORD-PART 1
              description: Message by Evg. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-lPNxXStjTopQf7wjvyrecdlkN.mp3'
              publishedDate: '2023-10-25 07:16:05'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VWS7BCSXPZHHFYAAWD
              title: HOW SOME BECOME SPIRITUAL DROPOUT
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM Ghana LEADERSHIP CLASS || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-CLZp6s5uNjjWy4LoiIhEC1oOR.mp3'
              publishedDate: '2023-10-22 20:16:26'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VXKSA8FYK4K0DZWAPB
              title: OFFENCE; THE WEAPON OF SATAN
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM RHEMA Service || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-sPmUMCOJtvSLMFYUkv7zeqXqC.mp3'
              publishedDate: '2023-10-22 20:14:49'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VZH45BAEG5FK75YQW7
              title: WHERE THE ANOINTING IS HONORED
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM Ghana Anointing Service || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-SKtEpKG16NX9wyuYGnN8Q5LFo.mp3'
              publishedDate: '2023-10-22 20:12:10'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W000FSN0805YNZDXTW
              title: TEACH US HOW TO NUMBER OUR DAYS
              description: 'Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP}'
              link: 'https://awscdn.podcasts.com/audio-qxR22b1CQ6apAmjQEEegkvCEI.mp3'
              publishedDate: '2023-10-20 08:45:47'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W2N153P71H21BMG484
              title: KNOWING THE TIMES AND SEASONS
              description: Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-81uFXV9G1ZJAsmZjfdAh8GHjy.mp3'
              publishedDate: '2023-10-19 06:57:19'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W3YG7TN3M3MP1TM49V
              title: THE TRUE DOCTRINE WITH HONOR
              description: Message by Evg Elijah Ben K. Agyapong During Sunday Anointing Service - SCIM Ghana Branch || 15.10.2023
              link: 'https://awscdn.podcasts.com/audio-W14c8qA3WwHUIriNeXik5nFdv.mp3'
              publishedDate: '2023-10-17 18:48:06'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W5T0HED3RKFMRPA147
              title: ANTIPIPTO (STUBBORNESS)
              description: Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-fFhp9WCNhHVnuJIf6ACABheAu.mp3'
              publishedDate: '2023-10-16 07:12:08'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W625H39QRA14Q1C8K9
              title: HOW TO HONOUR BY THINKING PROPERLY
              description: Message by Rev. Elijah-Ben Kusi Agyapong durin RHEMA SERVICE
              link: 'https://awscdn.podcasts.com/audio-2RpRR1E86aWr2STcot9Vf6298.mp3'
              publishedDate: '2023-10-16 06:46:08'
              author: Evangelist Elijah Ben
              image: null
          meta:
            show: Showing 1 to 10 of 291 items
            total: 291
            count: 10
            perPage: 10
            currentPage: 1
            totalPages: 30
            links:
              first: 'http://scim.test/api/m/podcasts?page=1'
              last: 'http://scim.test/api/m/podcasts?page=30'
              prev: null
              next: 'http://scim.test/api/m/podcasts?page=2'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Podcast'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - meta
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
