openapi: 3.0.0
x-stoplight:
  id: 3lghmwqbc6uha
info:
  title: Scim Openapi
  version: '1.0'
  description: Churchpro API specifications
  contact:
    name: Nana Kwesi Ofosu-Aikins
    email: nanaaikinson24@gmail.com
servers:
  - url: 'http://scim.test/api'
    description: Local
  - description: Testing
    url: 'https://scim.aikintech.com/api'
tags:
  - name: backoffice
  - name: central
  - name: mobile
paths:
  /c/auth/social/sign-in:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-social-sign-in
      description: 'Central: auth social sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialRequest'
        description: ''
  /c/auth/social/sign-up:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-social-sign-up
      description: 'Central: auth social sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialRequest'
  /c/auth/local/sign-in:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-local-sign-in
      description: 'Central: auth local sign in'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalSignInRequest'
  /c/auth/local/sign-up:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
      operationId: auth-local-sign-up
      description: 'Central: auth local sign up'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalSignUpRequest'
  /c/auth/update-device:
    post:
      summary: ''
      tags:
        - central
      operationId: auth-update-device
      description: 'Central: auth update device'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
    parameters: []
  /c/auth/update-password:
    patch:
      summary: ''
      tags:
        - central
      operationId: auth-update-password
      description: 'Central: auth update password'
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
    parameters: []
  /c/auth/update-profile:
    patch:
      summary: ''
      tags:
        - central
      operationId: auth-update-profile
      description: 'Central: auth update user profile'
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        description: ''
    parameters: []
  /c/auth/refresh-token:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
      operationId: auth-refresh-token
      description: 'Central: auth refresh token'
      security:
        - JWT: []
  /c/auth/user:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
      operationId: auth-user
      description: 'Central: auth user'
      security:
        - JWT: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: withRelations
    parameters: []
  /c/auth/verify-account:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAccountResponse'
      operationId: auth-verify-account
      security:
        - JWT: []
      description: 'Central: Auth verify account'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAccountRequest'
  /c/auth/resend-verification:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-resend-email-verification
      security:
        - JWT: []
      description: 'Central: Auth resend email verification'
    parameters: []
  /c/auth/logout:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-logout
      description: 'Cental: Auth logout'
      security:
        - JWT: []
  /c/auth/forgot-password:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-forgot-password
      description: 'Central: Auth forgot password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
  /c/files/upload:
    post:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
      operationId: files-upload
      description: 'Central: Files upload'
      security:
        - JWT: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
  /a/prayers:
    get:
      summary: ''
      tags:
        - backoffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackofficePrayersResponse'
      operationId: backoffice-get-prayers
      description: 'backoffice: Get prayers'
      security:
        - JWT: []
      parameters:
        - schema:
            type: number
          in: query
          name: page
          description: Current page
        - schema:
            type: number
          in: query
          name: limit
          description: Number of items
        - schema:
            type: string
          in: query
          name: search
          description: Search query
    parameters: []
  '/a/prayers/{id}':
    get:
      summary: ''
      tags:
        - backoffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Prayer'
                  message:
                    type: string
                    nullable: true
                required:
                  - data
                  - message
      operationId: backoffice-get-prayer
      description: 'backoffice: Get prayer'
      security:
        - JWT: []
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /a/iam/users:
    get:
      summary: ''
      tags:
        - backoffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackofficeUsersResponse'
      operationId: backoffice-get-users
      description: 'backoffice: Get users'
      security:
        - JWT: []
      parameters:
        - schema:
            type: number
          in: query
          name: page
          description: Current page
        - schema:
            type: number
          in: query
          name: limit
          description: Number of items
        - schema:
            type: string
          in: query
          name: search
          description: Search query
    parameters: []
    post:
      summary: ''
      operationId: backoffice-create-user
      responses:
        '200':
          description: OK
      description: 'backoffice: Create user'
      security:
        - JWT: []
      tags:
        - backoffice
  /a/events:
    get:
      summary: ''
      tags:
        - backoffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
      operationId: backoffice-get-events
      description: 'backoffice: Get events'
      security:
        - JWT: []
      parameters:
        - schema:
            type: number
          in: query
          name: page
          description: Current page
        - schema:
            type: number
          in: query
          name: limit
          description: Number of items
        - schema:
            type: string
          in: query
          name: search
          description: Search query
    parameters: []
    post:
      summary: ''
      operationId: backoffice-create-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      description: 'backoffice: Create event'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreEventRequest'
      tags:
        - backoffice
  '/a/events/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - backoffice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      operationId: backoffice-get-event
      description: 'backoffice: Get event'
      security:
        - JWT: []
      parameters:
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: search
    patch:
      tags:
        - backoffice
      summary: ''
      operationId: backoffice-update-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      description: 'backoffice: Update event'
      security:
        - JWT: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreEventRequest'
    delete:
      tags:
        - backoffice
      summary: ''
      operationId: backoffice-delete-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'backoffice: Delete event'
      security:
        - JWT: []
      parameters: []
  /c/podcasts:
    get:
      summary: ''
      tags:
        - central
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
      operationId: client-get-podcasts
      description: 'Client: Get podcasts'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
    parameters: []
  /m/prayers:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobilePrayers'
      operationId: client-prayer-requests
      security:
        - JWT: []
      description: 'Mobile: Get prayer-requests'
      parameters:
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: search
    post:
      summary: ''
      operationId: client-request-prayer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Client: request for a prayer'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrayerRequest'
      tags:
        - mobile
  /m/podcasts:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
      operationId: mobile-get-podcasts
      description: 'Mobile: Get podcasts'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: string
            enum:
              - newest
              - oldest
          in: query
          name: order
  '/m/podcasts/{id}':
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastResponse'
      operationId: mobile-get-podcast
      description: 'Mobile: Get podcast'
      security:
        - JWT: []
      parameters: []
      tags:
        - mobile
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/m/podcasts/{id}/like':
    patch:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: mobile-like-podcast
      description: 'Mobile: Like/Unlike podcast'
      security:
        - JWT: []
      parameters: []
      tags:
        - mobile
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /m/playlists:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistsReponse'
      operationId: mobile-get-playlists
      description: 'Mobile: Get playlists'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: boolean
          in: query
          name: withPodcasts
    post:
      summary: ''
      operationId: mobile-create-playlist
      responses:
        '200':
          description: OK
      description: 'Mobile: Create playlist'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorePlaylist'
      tags:
        - mobile
  '/m/playlists/{id}':
    patch:
      summary: ''
      operationId: mobile-update-playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'
      description: 'Mobile: Update playlist'
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorePlaylist'
      tags:
        - mobile
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      operationId: mobile-get-playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'
      description: 'Mobile: Get playlist'
      security:
        - JWT: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: withPodcasts
      tags:
        - mobile
    delete:
      summary: ''
      operationId: mobile-delete-playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Mobile: Delete playlist'
      security:
        - JWT: []
      tags:
        - mobile
  /m/dashboard:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileDashboardResponse'
      operationId: mobile-get-dashboard-data
      description: 'Mobile: Get dashboard data'
      security:
        - JWT: []
  /m/events:
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
      operationId: mobile-get-events
      description: 'Mobile: Get events'
      security:
        - JWT: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: number
          in: query
          name: page
    parameters: []
  '/m/events/{id}':
    get:
      summary: ''
      tags:
        - mobile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
      operationId: mobile-get-event
      description: 'Mobile: Get event'
      security:
        - JWT: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
components:
  schemas:
    MessageResponse:
      title: MessageResponse
      x-stoplight:
        id: bnx29eprw94jt
      type: object
      properties:
        message:
          type: string
      required:
        - message
    AuthUserResponse:
      type: object
      x-examples:
        Example 1:
          data:
            user:
              firstName: Nana
              lastName: Aikinson
              email: nanaaikinson2020@gmail.com
              avatar: null
              onboardingStep: account verification
            token:
              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2Noc3luYy50ZXN0L2FwaS9jL2F1dGgvbG9jYWwvc2lnbi11cCIsImlhdCI6MTY5MzM1NjMyOCwiZXhwIjoxNjkzMzYzNTI4LCJuYmYiOjE2OTMzNTYzMjgsImp0aSI6Imh6ZGhvbU5XeTNQQWI3VzIiLCJzdWIiOiIwMUg5MVlFMVE5R1FEMEgxNEdYUFo5UFJTRiIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJjaGFubmVsIjoidGVuYW50In0.fMGScLG9qDsYbSUManZnhmHQ5tLhsd_NiXkstRb5DUs
              expiresAt: '2023-08-31T00:45:28.689725Z'
              refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2Noc3luYy50ZXN0L2FwaS9jL2F1dGgvbG9jYWwvc2lnbi11cCIsImlhdCI6MTY5MzM1NjMyOCwiZXhwIjoxNjkzNDQyNzI4LCJuYmYiOjE2OTMzNTYzMjgsImp0aSI6IlczTmdOVE9rMUlra0NISDIiLCJzdWIiOiIwMUg5MVlFMVE5R1FEMEgxNEdYUFo5UFJTRiIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJjaGFubmVsIjoidGVuYW50In0.H5do1rZpoWDd5AX--4BjA3cH366XEWVY3V2Sr0Z3lek
          message: |-
            Thank you for signing up! We're thrilled to have you join Church Sync.
                    Your account creation is almost complete. Please check your email for a verification code.
                    Once you've received it, simply enter the code in the verification code input to finalize your account setup.
                    We can't wait to see you make the most of our platform!
      x-stoplight:
        id: 3cf8a7923c54b
      properties:
        data:
          type: object
          required:
            - user
            - tokens
          properties:
            user:
              $ref: '#/components/schemas/User'
            tokens:
              type: object
              required:
                - access
                - expiresAt
                - refresh
              properties:
                access:
                  type: string
                expiresAt:
                  type: string
                refresh:
                  type: string
        message:
          type: string
      required:
        - data
        - message
    SocialRequest:
      title: SocialRequest
      x-stoplight:
        id: a1e8ace90050a
      type: object
      properties:
        accessToken:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
        provider:
          type: string
          enum:
            - google
            - apple
      required:
        - accessToken
        - channel
        - provider
    LocalSignInRequest:
      title: LocalSignInRequest
      x-stoplight:
        id: d1hms4p7i66i6
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - email
        - password
        - channel
    LocalSignUpRequest:
      title: LocalSignUpRequest
      x-stoplight:
        id: vfbvvpl8arhl9
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
        terms:
          type: boolean
      required:
        - firstName
        - lastName
        - email
        - password
        - channel
        - terms
    VerifyAccountRequest:
      title: VerifyAccountRequest
      x-stoplight:
        id: cqjn3a193c7cg
      type: object
      properties:
        verificationCode:
          type: string
        channel:
          type: string
          enum:
            - mobile
            - web
      required:
        - verificationCode
        - channel
    Prayer:
      type: object
      x-examples:
        Example 1:
          id: 01H81MXPT49ZF0HXWKFWWHTAPE
          title: Test title
          description: Test description
          createdAt: '2023-08-17T11:43:34.000000Z'
          status: null
          name: John Doe
          email: john.doe@example.com
          phoneNumber: null
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        createdAt:
          type: string
        status:
          type: string
          nullable: true
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - createdAt
        - status
        - name
        - email
        - phoneNumber
    PrayersResponse:
      type: object
      description: Prayers response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Prayer'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    BackofficePrayersResponse:
      type: object
      description: Prayers response
      x-stoplight:
        id: c7157fff428f9
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BackofficePrayer'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    Event:
      type: object
      x-examples:
        Example 1:
          id: 01H81T2GZ7P3H640YG2CKH4VXS
          title: test
          description: test description
          startDate: '2020-10-10'
          endDate: '2020-10-10'
          location: null
          published: true
          createdAt: '2023-08-17T13:13:34.000000Z'
          image: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/central/events/01H81JEN6B744WS8HY6DS89N6V/1692278014_01H81T2GZAAFT3N0N8GAKGG9Z6.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230817%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230817T131339Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=cd9adcdf2587096e6a81e5e4b77679351d1fce630119f5067a1bcbecf00d3000'
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        location:
          type: string
          nullable: true
        published:
          type: boolean
        createdAt:
          type: string
        image:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - startDate
        - endDate
        - location
        - published
        - createdAt
        - image
    EventsResponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01H81T2GZ7P3H640YG2CKH4VXS
              title: test
              description: test description
              startDate: '2020-10-10'
              endDate: '2020-10-10'
              location: null
              published: true
              createdAt: '2023-08-17T13:13:34.000000Z'
              image: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/central/events/01H81JEN6B744WS8HY6DS89N6V/1692278014_01H81T2GZAAFT3N0N8GAKGG9Z6.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230817%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230817T131339Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=cd9adcdf2587096e6a81e5e4b77679351d1fce630119f5067a1bcbecf00d3000'
          meta:
            show: Showing 1 to 1 of 1 items
            total: 1
            count: 1
            perPage: 10
            currentPage: 1
            totalPages: 1
            links:
              first: 'http://saas.test/api/t/events?page=1'
              last: 'http://saas.test/api/t/events?page=1'
              prev: null
              next: null
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    StoreEventRequest:
      title: StoreEventRequest
      x-stoplight:
        id: 6061s1v2isa6d
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        published:
          type: boolean
          default: false
        image:
          type: string
          nullable: true
      required:
        - title
        - description
        - startDate
        - endDate
        - published
    EventResponse:
      type: object
      x-examples:
        Example 1:
          message: Event created successfully.
          data: {}
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/Event'
      required:
        - message
        - data
    RefreshTokenResponse:
      type: object
      x-examples:
        Example 1:
          data:
            accessToken: ''
            expiresAt: ''
            tokenType: ''
          message: ''
      properties:
        data:
          type: object
          required:
            - access
            - expiresAt
          properties:
            access:
              type: string
            expiresAt:
              type: string
        message:
          type: string
          nullable: true
      required:
        - data
        - message
    PrayerRequest:
      type: object
      x-examples:
        Example 1:
          title: Test prayer request
          description: This is a test description
      properties:
        title:
          type: string
        description:
          type: string
      required:
        - title
        - description
    MobilePrayers:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01H99257805PBQX617341EBZ62
              title: Test prayer request
              description: This is a test description
              createdAt: '2023-09-01T19:05:14.000000Z'
          meta:
            show: Showing 1 to 1 of 1 items
            total: 1
            count: 1
            perPage: 10
            currentPage: 1
            totalPages: 1
            links:
              first: 'https://chsync.test/api/m/prayers?page=1'
              last: 'https://chsync.test/api/m/prayers?page=1'
              prev: null
              next: null
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              createdAt:
                type: string
            required:
              - id
              - title
              - description
              - createdAt
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - meta
    FileUploadRequest:
      title: FileUploadRequest
      x-stoplight:
        id: ivjnukgur6ujw
      type: object
      properties:
        file:
          type: string
          format: binary
        contentType:
          type: string
          enum:
            - logo
            - excerpt
            - avatar
      required:
        - file
        - contentType
    FileUploadResponse:
      type: object
      x-examples:
        Example 1:
          data:
            id: 01H9AV5QTTFMYEVD7D5HVD4642
            url: 'https://churchhub-testuploads.s3.eu-west-2.amazonaws.com/uploads/logos/1693654896_01H9AV5KRN6HQA22D3PE95K9QX.jpg?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAWYEDV5MAY23AGOU4%2F20230902%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230902T114140Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Signature=a0b2dd0d1d56732d2b450033a0bd4cd1f7cf9d2e001c0a29669764e28a33a19d'
          message: ''
      properties:
        data:
          type: object
          required:
            - id
            - url
          properties:
            id:
              type: string
            url:
              type: string
        message:
          type: string
      required:
        - data
        - message
    UpdateOrganizationRequest:
      type: object
      x-examples:
        Example 1:
          email: nanaaikinson24@gmail.com
          name: Light house
          phoneNumber: '0241726707'
          location: Manfe
          socials:
            facebook: '@lighthouse'
      properties:
        email:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        logo:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        socials:
          type: object
          properties:
            facebook:
              type: string
              nullable: true
            x:
              type: string
              nullable: true
            youtube:
              type: string
              nullable: true
            instagram:
              type: string
              nullable: true
            tiktok:
              type: string
              nullable: true
            threads:
              type: string
              nullable: true
            website:
              type: string
              nullable: true
      required:
        - email
        - name
        - phoneNumber
        - location
        - logo
        - about
        - socials
      title: ''
    AuthUser:
      title: AuthUser
      x-stoplight:
        id: z5wzzk0c19cim
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
      required:
        - data
    User:
      title: User
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        avatar:
          type: string
          nullable: true
        emailVerified:
          type: boolean
      required:
        - id
        - firstName
        - lastName
        - email
        - avatar
        - emailVerified
    VerifyAccountResponse:
      title: VerifyAccountResponse
      x-stoplight:
        id: htol1s9a5iyfw
      type: object
      properties:
        message:
          type: string
      required:
        - message
    UpdatePasswordRequest:
      title: UpdatePasswordRequest
      x-stoplight:
        id: oxx29um0obez7
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
      required:
        - currentPassword
        - newPassword
        - confirmNewPassword
    UpdateProfileRequest:
      type: object
      x-stoplight:
        id: 85bb2c570d6bc
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        avatar:
          type: string
      required:
        - firstName
        - lastName
    UpdateDeviceRequest:
      title: UpdateDeviceRequest
      x-stoplight:
        id: pioxfxk04mpio
      type: object
      properties:
        deviceId:
          type: string
        fcmToken:
          type: string
        type:
          type: string
          enum:
            - android
            - ios
      required:
        - deviceId
        - fcmToken
        - type
    ForgotPasswordRequest:
      title: ForgotPasswordRequest
      x-stoplight:
        id: uenqt0nyerqsu
      type: object
      properties:
        email:
          type: string
      required:
        - email
    Podcast:
      type: object
      x-examples:
        Example 1:
          id: 01HDVMT7TDHHRNDZEAH3TC8P4S
          title: SEVEN WAYS TO SOW SEEDS OF RIGHTEOUSNESS
          description: Message by Evang. Elijah-Ben Kusi Agyapong during morning devotion (B4DBP)
          link: 'https://awscdn.podcasts.com/audio-OYy9tjR4zWOa17YqZu2hFuEbv.mp3'
          publishedDate: '2023-10-26 06:58:49'
          author: Evangelist Elijah Ben
          image: null
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        link:
          type: string
        publishedDate:
          type: string
        author:
          type: string
        image:
          type: string
          nullable: true
      required:
        - id
        - title
        - description
        - link
        - publishedDate
        - author
        - image
    PodcastsResponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01HDVMT7TDHHRNDZEAH3TC8P4S
              title: SEVEN WAYS TO SOW SEEDS OF RIGHTEOUSNESS
              description: Message by Evang. Elijah-Ben Kusi Agyapong during morning devotion (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-OYy9tjR4zWOa17YqZu2hFuEbv.mp3'
              publishedDate: '2023-10-26 06:58:49'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VTX03K1G9QPSQKSVAJ
              title: SEVEN WAYS TO SEEK THE LORD-PART 1
              description: Message by Evg. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-lPNxXStjTopQf7wjvyrecdlkN.mp3'
              publishedDate: '2023-10-25 07:16:05'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VWS7BCSXPZHHFYAAWD
              title: HOW SOME BECOME SPIRITUAL DROPOUT
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM Ghana LEADERSHIP CLASS || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-CLZp6s5uNjjWy4LoiIhEC1oOR.mp3'
              publishedDate: '2023-10-22 20:16:26'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VXKSA8FYK4K0DZWAPB
              title: OFFENCE; THE WEAPON OF SATAN
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM RHEMA Service || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-sPmUMCOJtvSLMFYUkv7zeqXqC.mp3'
              publishedDate: '2023-10-22 20:14:49'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7VZH45BAEG5FK75YQW7
              title: WHERE THE ANOINTING IS HONORED
              description: Message by Evg. Elijah Ben K. Agyapong During SCIM Ghana Anointing Service || 22.10.2023&nbsp;
              link: 'https://awscdn.podcasts.com/audio-SKtEpKG16NX9wyuYGnN8Q5LFo.mp3'
              publishedDate: '2023-10-22 20:12:10'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W000FSN0805YNZDXTW
              title: TEACH US HOW TO NUMBER OUR DAYS
              description: 'Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP}'
              link: 'https://awscdn.podcasts.com/audio-qxR22b1CQ6apAmjQEEegkvCEI.mp3'
              publishedDate: '2023-10-20 08:45:47'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W2N153P71H21BMG484
              title: KNOWING THE TIMES AND SEASONS
              description: Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-81uFXV9G1ZJAsmZjfdAh8GHjy.mp3'
              publishedDate: '2023-10-19 06:57:19'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W3YG7TN3M3MP1TM49V
              title: THE TRUE DOCTRINE WITH HONOR
              description: Message by Evg Elijah Ben K. Agyapong During Sunday Anointing Service - SCIM Ghana Branch || 15.10.2023
              link: 'https://awscdn.podcasts.com/audio-W14c8qA3WwHUIriNeXik5nFdv.mp3'
              publishedDate: '2023-10-17 18:48:06'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W5T0HED3RKFMRPA147
              title: ANTIPIPTO (STUBBORNESS)
              description: Message by Evang. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
              link: 'https://awscdn.podcasts.com/audio-fFhp9WCNhHVnuJIf6ACABheAu.mp3'
              publishedDate: '2023-10-16 07:12:08'
              author: Evangelist Elijah Ben
              image: null
            - id: 01HDVMT7W625H39QRA14Q1C8K9
              title: HOW TO HONOUR BY THINKING PROPERLY
              description: Message by Rev. Elijah-Ben Kusi Agyapong durin RHEMA SERVICE
              link: 'https://awscdn.podcasts.com/audio-2RpRR1E86aWr2STcot9Vf6298.mp3'
              publishedDate: '2023-10-16 06:46:08'
              author: Evangelist Elijah Ben
              image: null
          meta:
            show: Showing 1 to 10 of 291 items
            total: 291
            count: 10
            perPage: 10
            currentPage: 1
            totalPages: 30
            links:
              first: 'http://scim.test/api/m/podcasts?page=1'
              last: 'http://scim.test/api/m/podcasts?page=30'
              prev: null
              next: 'http://scim.test/api/m/podcasts?page=2'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Podcast'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - meta
      title: ''
    Playlist:
      type: object
      x-examples:
        Example 1:
          id: 01HEB0A9F9ZF4XH4VN4Q54SJ7A
          title: Test
          description: null
          createdAt: '2023-11-04T10:14:43.000000Z'
          podcastsCount: 0
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
          nullable: true
        createdAt:
          type: string
        podcastsCount:
          type: integer
        podcasts:
          type: array
          items:
            $ref: '#/components/schemas/Podcast'
      required:
        - id
        - title
        - description
        - createdAt
        - podcastsCount
    PlaylistsReponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01HEB0A9F9ZF4XH4VN4Q54SJ7A
              title: Test
              description: null
              createdAt: '2023-11-04T10:14:43.000000Z'
              podcastsCount: 0
          meta:
            show: Showing 1 to 1 of 1 items
            total: 1
            count: 1
            perPage: 10
            currentPage: 1
            totalPages: 1
            links:
              first: 'http://scim.test/api/m/playlists?page=1'
              last: 'http://scim.test/api/m/playlists?page=1'
              prev: null
              next: null
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Playlist'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    StorePlaylist:
      title: StorePlaylist
      x-stoplight:
        id: bdgghmp9tynd5
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        podcasts:
          type: array
          items:
            type: string
      required:
        - title
        - description
    PlaylistResponse:
      title: PlaylistResponse
      x-stoplight:
        id: frogsruht2onz
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Playlist'
        message:
          type: string
          nullable: true
      required:
        - message
    PodcastResponse:
      title: PodcastResponse
      x-stoplight:
        id: 4gsy2v4v6jim4
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Podcast'
        message:
          type: string
          nullable: true
      required:
        - data
        - message
    MobileDashboardResponse:
      type: object
      x-examples:
        Example 1:
          data:
            upcomingEvents: []
            recentPodcasts:
              - id: 01HEB0HHBA59QD1C4JE5QQ6Y55
                title: NOT THINKING FOOLiSHLY BUT UNDERSTANDING THE WILL OF GOD
                description: Message By Evg. Elijah Ben K. Agyapong during SCIM TUESDAY TEACHING SERVICE || 31.10.2023
                link: 'https://awscdn.podcasts.com/audio-PzGNvAsMqBbLDYHnwLITXP2Y0.mp3'
                publishedDate: '2023-10-31 20:49:01'
                author: Evangelist Elijah Ben
                image: null
              - id: 01HEB0HHBDRKCJVQFNHCP623Q8
                title: DEALING WITH SLANDERERS
                description: Message by Evg. Elijah Ben K. Agyapong during B4DBP || 30.10.2023
                link: 'https://awscdn.podcasts.com/audio-q8DRswSpdz0wid9hZe3w3KQeX.mp3'
                publishedDate: '2023-10-31 16:24:16'
                author: Evangelist Elijah Ben
                image: null
              - id: 01HEB0HHBEJJY1BZWB4TZD45DQ
                title: HTP SERVICE - GHANA
                description: Message by Evg. Elijah B. K. Agyapong during HTP service - Ghana || 29.10.2023
                link: 'https://awscdn.podcasts.com/audio-hjDPwod5wAWIpIlSSPzjGqAEU.mp3'
                publishedDate: '2023-10-30 17:47:13'
                author: Evangelist Elijah Ben
                image: null
              - id: 01HEB0HHBFQ0V74BJC3500FDBK
                title: SEVEN WAYS TO SOW SEEDS OF RIGHTEOUSNESS
                description: Message by Evang. Elijah-Ben Kusi Agyapong during morning devotion (B4DBP)
                link: 'https://awscdn.podcasts.com/audio-OYy9tjR4zWOa17YqZu2hFuEbv.mp3'
                publishedDate: '2023-10-26 06:58:49'
                author: Evangelist Elijah Ben
                image: null
              - id: 01HEB0HHBGJQ7ZY6G7NHVWCYVA
                title: SEVEN WAYS TO SEEK THE LORD-PART 1
                description: Message by Evg. Elijah-Ben Kusi Agyapong during Before Day Break Prayers (B4DBP)
                link: 'https://awscdn.podcasts.com/audio-lPNxXStjTopQf7wjvyrecdlkN.mp3'
                publishedDate: '2023-10-25 07:16:05'
                author: Evangelist Elijah Ben
                image: null
          message: Successfully retrieved dashboard data.
      properties:
        data:
          type: object
          required:
            - upcomingEvents
            - recentPodcasts
          properties:
            upcomingEvents:
              type: array
              items:
                $ref: '#/components/schemas/Event'
            recentPodcasts:
              type: array
              items:
                $ref: '#/components/schemas/Podcast'
        message:
          type: string
      required:
        - data
        - message
    BackofficeUsersResponse:
      type: object
      x-examples:
        Example 1:
          data:
            - id: 01HEB0A9W7MAS8Y8RQHQ2125D9
              firstName: Kyler
              lastName: Corkery
              email: weber.lela@example.org
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA87ZG7MTMVECRB1EF80
              firstName: Estrella
              lastName: Armstrong
              email: joaquin.bogisich@example.com
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA7ZJ45S4VXSYG6AG3WY
              firstName: Kendall
              lastName: Cruickshank
              email: badams@example.org
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA7Q5Z6SFJE1AVBH7F0X
              firstName: Felton
              lastName: Jacobs
              email: ottis03@example.net
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA7FZCHG6S2RG6DNPY03
              firstName: Maxine
              lastName: Wilkinson
              email: jason99@example.com
              emailVerified: true
              username: null
              signUpProvider: local
              status: suspended
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA7709R4NM0HQ5N0R236
              firstName: Leonor
              lastName: Ward
              email: cummerata.raina@example.org
              emailVerified: true
              username: null
              signUpProvider: apple
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA6Y9BDEB93PDDFC4K7V
              firstName: Emmitt
              lastName: Ortiz
              email: saul84@example.com
              emailVerified: true
              username: null
              signUpProvider: google
              status: suspended
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA6PEYA8NS7T6WEVM4DV
              firstName: Aubrey
              lastName: Grant
              email: funk.joesph@example.org
              emailVerified: true
              username: null
              signUpProvider: google
              status: suspended
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA6EQE9CYKQB334MSTDK
              firstName: Brooks
              lastName: Schowalter
              email: satterfield.astrid@example.org
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA66H7JEWH5M0N6BZMEA
              firstName: Makenna
              lastName: O'Keefe
              email: cloyd96@example.net
              emailVerified: true
              username: null
              signUpProvider: apple
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA5Y1K2C7VM7NYYDWCRY
              firstName: Ali
              lastName: Dietrich
              email: stevie55@example.net
              emailVerified: true
              username: null
              signUpProvider: google
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA5QDMEBTE4NJKGZ7GT2
              firstName: Federico
              lastName: Shanahan
              email: blick.matteo@example.com
              emailVerified: true
              username: null
              signUpProvider: google
              status: suspended
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA5ECARZE98TYRYRANY7
              firstName: Milan
              lastName: Gulgowski
              email: uspencer@example.org
              emailVerified: true
              username: null
              signUpProvider: local
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA57HRBN9NXFAHYT8WQF
              firstName: Sabina
              lastName: Daniel
              email: carter.jermey@example.com
              emailVerified: true
              username: null
              signUpProvider: apple
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
            - id: 01HEB0AA4Z7DEC6XZRMYBVYRNK
              firstName: Tanner
              lastName: Jones
              email: qabshire@example.com
              emailVerified: true
              username: null
              signUpProvider: local
              status: active
              channels:
                - mobile
              createdAt: '2023-11-03T16:30:02.000000Z'
              avatar: null
          meta:
            show: Showing 1 to 15 of 100 items
            total: 100
            count: 15
            perPage: 15
            currentPage: 1
            totalPages: 7
            links:
              first: 'http://scim.test/api/a/users?page=1'
              last: 'http://scim.test/api/a/users?page=7'
              prev: null
              next: 'http://scim.test/api/a/users?page=2'
      x-stoplight:
        id: 980c7773a37f7
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BackofficeUser'
        meta:
          type: object
          required:
            - show
            - total
            - count
            - perPage
            - currentPage
            - totalPages
            - links
          properties:
            show:
              type: string
            total:
              type: integer
            count:
              type: integer
            perPage:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
            links:
              type: object
              required:
                - first
                - last
                - prev
                - next
              properties:
                first:
                  type: string
                last:
                  type: string
                prev:
                  type: string
                  nullable: true
                next:
                  type: string
                  nullable: true
      required:
        - data
        - meta
    BackofficeUser:
      type: object
      x-examples:
        Example 1:
          id: 01HEB0A9W7MAS8Y8RQHQ2125D9
          firstName: Kyler
          lastName: Corkery
          email: weber.lela@example.org
          emailVerified: true
          username: null
          signUpProvider: google
          status: active
          channels:
            - mobile
          createdAt: '2023-11-03T16:30:02.000000Z'
          avatar: null
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        username:
          type: string
          nullable: true
        signUpProvider:
          type: string
        status:
          type: string
        channels:
          type: array
          items:
            type: string
        createdAt:
          type: string
        avatar:
          type: string
          nullable: true
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
        - username
        - signUpProvider
        - status
        - channels
        - createdAt
        - avatar
      title: BackOfficeUser
      x-stoplight:
        id: bb48d8b3dfe93
    BackofficeStoreUserRequest:
      title: BackofficeStoreUserRequest
      x-stoplight:
        id: l169jcpk0uwvl
      type: object
      properties:
        id:
          type: string
    BackofficePrayer:
      type: object
      x-examples:
        Example 1:
          id: 01HEB0AA5J3R9ADHC3NZ97R1N4
          title: Corrupti facilis est nihil nihil voluptatum ducimus et quia.
          description: Distinctio facere ipsam ut reprehenderit explicabo eaque. Suscipit veniam provident et molestiae tempora rerum exercitationem. Ab quia aut autem adipisci et sunt saepe.
          status: pending
          createdAt: '2023-11-03T16:30:02.000000Z'
          completedAt: null
          unreachableAt: null
          requestBy:
            id: 01HEB0AA5ECARZE98TYRYRANY7
            firstName: Milan
            lastName: Gulgowski
            email: uspencer@example.org
            emailVerified: true
            username: null
            phoneNumber: null
            signUpProvider: local
            status: active
            channels:
              - mobile
            createdAt: '2023-11-03T16:30:02.000000Z'
            avatar: null
          completedBy: null
          updatedBy: null
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - pending
            - completed
            - unreachable
        createdAt:
          type: string
        completedAt:
          type: string
          nullable: true
        unreachableAt:
          type: string
          nullable: true
        requestBy:
          $ref: '#/components/schemas/User'
        completedBy:
          $ref: '#/components/schemas/User'
        updatedBy:
          $ref: '#/components/schemas/User'
      required:
        - id
        - title
        - description
        - status
        - createdAt
        - completedAt
        - unreachableAt
        - requestBy
      x-stoplight:
        id: 7f3c9e11da4d3
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
